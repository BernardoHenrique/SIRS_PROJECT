{"ast":null,"code":"const express = require('express');\nconst app = express();\nconst https = require(\"https\");\nconst {\n  Server\n} = require(\"socket.io\");\nconst cors = require(\"cors\");\napp.use(cors());\nconst server = https.createServer(app);\nconst io = new Server(server, {\n  cors: {\n    origin: \"https://localhost:3000\",\n    methods: [\"GET\", \"POST\"]\n  }\n});\nio.on(\"connection\", socket => {\n  console.log(`User Connected: ${socket.id}`);\n});\nserver.listen(3001, () => {\n  console.log(\"SERVER IS RUNNING\");\n});","map":{"version":3,"names":["express","require","app","https","Server","cors","use","server","createServer","io","origin","methods","on","socket","console","log","id","listen"],"sources":["/home/seed/Desktop/sirs/SIRS_PROJECT/backend_sirs/src/index.js"],"sourcesContent":["const express = require('express')\nconst app = express();\nconst https = require(\"https\");\nconst { Server } = require(\"socket.io\");\nconst cors = require(\"cors\")\napp.use(cors());\nconst server = https.createServer(app);\n\nconst io = new Server(server, {\n    cors: {\n        origin: \"https://localhost:3000\",\n        methods: [\"GET\", \"POST\"],\n    },\n});\n\nio.on(\"connection\", (socket) => {\n    console.log(`User Connected: ${socket.id}`);\n})\n\nserver.listen(3001, () => {\n    console.log(\"SERVER IS RUNNING\");\n})"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,GAAG,GAAGF,OAAO,EAAE;AACrB,MAAMG,KAAK,GAAGF,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAM;EAAEG;AAAO,CAAC,GAAGH,OAAO,CAAC,WAAW,CAAC;AACvC,MAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAC5BC,GAAG,CAACI,GAAG,CAACD,IAAI,EAAE,CAAC;AACf,MAAME,MAAM,GAAGJ,KAAK,CAACK,YAAY,CAACN,GAAG,CAAC;AAEtC,MAAMO,EAAE,GAAG,IAAIL,MAAM,CAACG,MAAM,EAAE;EAC1BF,IAAI,EAAE;IACFK,MAAM,EAAE,wBAAwB;IAChCC,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM;EAC3B;AACJ,CAAC,CAAC;AAEFF,EAAE,CAACG,EAAE,CAAC,YAAY,EAAGC,MAAM,IAAK;EAC5BC,OAAO,CAACC,GAAG,CAAE,mBAAkBF,MAAM,CAACG,EAAG,EAAC,CAAC;AAC/C,CAAC,CAAC;AAEFT,MAAM,CAACU,MAAM,CAAC,IAAI,EAAE,MAAM;EACtBH,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;AACpC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}